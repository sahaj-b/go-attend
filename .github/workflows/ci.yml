name: Go Build, Test & Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    name: Run Go Tests
    runs-on: ubuntu-latest
    outputs:
      passed: ${{ steps.test_step.outcome == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'
          cache: true
      - name: Run tests
        id: test_step
        run: go test -v ./...

  build-all-binaries:
    name: Build All Binaries
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'
          cache: true

      - name: Build Linux AMD64
        run: GOOS=linux GOARCH=amd64 go build -v -ldflags="-s -w" -o "go-attend-linux-amd64" ./main.go
      - name: Build Linux ARM64
        run: GOOS=linux GOARCH=arm64 go build -v -ldflags="-s -w" -o "go-attend-linux-arm64" ./main.go
      - name: Build macOS AMD64
        run: GOOS=darwin GOARCH=amd64 go build -v -ldflags="-s -w" -o "go-attend-macos-amd64" ./main.go
      - name: Build macOS ARM64
        run: GOOS=darwin GOARCH=arm64 go build -v -ldflags="-s -w" -o "go-attend-macos-arm64" ./main.go

      - name: Upload All Built Binaries as a Single Artifact
        uses: actions/upload-artifact@v4
        with:
          name: go-attend-binaries-bundle
          path: go-attend-*
          retention-days: 7

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build-all-binaries
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write

    steps:
      - name: Create staging directory for release assets
        run: mkdir release_assets

      - name: Download all binaries artifact bundle
        uses: actions/download-artifact@v4
        with:
          name: go-attend-binaries-bundle
          path: release_assets/

      - name: List downloaded files
        run: ls -R release_assets

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          files: release_assets/go-attend-*
          fail_on_unmatched_files: true
